Техническое задание на разработку плагина для Minecraft 1.20.4
Общая информация
Проект: Плагин для синхронизации эндер-сундуков и межсерверного чата для Minecraft 1.20.4
Используемые технологии: Java, Redis, Lombok, StreamAPI, СУБД (MySQL или PostgreSQL)
Цель: Реализовать плагин, обеспечивающий синхронизацию содержимого эндер-сундуков между серверами и межсерверный чат по команде через Redis, с сохранением инвентаря в базе данных.

Требования к функционалу
Синхронизация эндер-сундуков
Сохранение содержимого эндер-сундуков:

При каждом изменении содержимого эндер-сундука игрока, данные должны сохраняться в Redis и в базе данных.
Данные должны храниться в формате JSON в Redis и в структурированном виде в базе данных (например, в таблице с колонками для каждого слота инвентаря).
Использовать Lombok для упрощения кода моделей данных.
Загрузка содержимого эндер-сундуков:

При заходе игрока на сервер, содержимое его эндер-сундука должно загружаться из базы данных.
Если данные отсутствуют в базе данных, эндер-сундук должен быть пустым.
Обновление содержимого:

При изменении содержимого эндер-сундука, изменения должны моментально отражаться на всех серверах через синхронизацию с Redis и запись в базу данных.
Межсерверный чат
Команда для отправки сообщений:

Добавить команду /globalchat <сообщение>, которая будет отправлять сообщение на все подключенные серверы через Redis.
Обработка сообщений:

Сообщения должны быть получены всеми серверами и выведены в игровой чат с указанием имени отправителя и сервера, с которого было отправлено сообщение.
Форматирование сообщений:

Сообщения должны быть форматированы следующим образом: [ServerName] <PlayerName>: <Message>.
Технические детали
Redis
Подключение к Redis должно быть сконфигурировано через файл настроек плагина (например, config.yml).
Должна быть реализована обработка подключения и отключения от Redis, чтобы избежать потери данных.
СУБД
Подключение к базе данных должно быть сконфигурировано через файл настроек плагина (например, config.yml).
Таблицы базы данных должны быть спроектированы для хранения данных эндер-сундуков, включая идентификатор игрока и содержимое его сундука.
Lombok и StreamAPI
Использовать Lombok для создания моделей данных, геттеров, сеттеров и конструкторов.
Использовать StreamAPI для обработки коллекций и других операций, где это уместно.
Архитектура плагина
Основные классы
MainPluginClass:

Главный класс плагина, ответственный за инициализацию и регистрацию всех компонентов.
EnderChestSyncManager:

Класс для управления синхронизацией эндер-сундуков.
GlobalChatManager:

Класс для управления межсерверным чатом.
RedisManager:

Класс для управления подключением к Redis и выполнения операций чтения/записи.
DatabaseManager:

Класс для управления подключением к базе данных и выполнения операций чтения/записи.
Пример структуры проекта
lua
Копировать код
com.yourplugin
|-- MainPluginClass.java
|-- managers
|   |-- EnderChestSyncManager.java
|   |-- GlobalChatManager.java
|   |-- RedisManager.java
|   |-- DatabaseManager.java
|-- models
|   |-- EnderChestData.java (с Lombok аннотациями)
|-- commands
|   |-- GlobalChatCommand.java
|-- listeners
|   |-- EnderChestListener.java
Требования к качеству кода
Код должен быть чистым и документированным.
Все ключевые функции и методы должны быть покрыты юнит-тестами.
Исключительные ситуации должны быть корректно обработаны.
Дополнительные требования
Поддержка плагина должна быть обеспечена на версиях Minecraft 1.20.4 и выше.
Плагин должен быть протестирован на нескольких серверах для подтверждения корректной работы синхронизации и чата.
Документация
Должна быть создана подробная документация по установке и настройке плагина.
Описание всех команд и конфигурационных параметров должно быть включено в документацию.
Сроки
Разработка плагина должна быть завершена в течение 4 недель с момента утверждения ТЗ.
Контакты
Заказчик: [Имя заказчика]
Email: [Email заказчика]
Если будут вопросы или потребуется дополнительная информация, свяжитесь с заказчиком по указанным контактам.

Ожидаемый результат
Полностью функциональный плагин, отвечающий всем указанным требованиям, с предоставленной документацией и тестами.